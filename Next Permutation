public class Solution {
    public void nextPermutation(int[] nums) {
        
        
        int j=nums.length-2;
        for(;j>=0;j--){
            int i=j+1;
            int min=0,min_idx=0;
            while(i<nums.length){
                if (nums[i]>nums[j]){
                    min=nums[i];
                    min_idx=i;
                    break;
                }
                i++;
            }
            if(i==nums.length) continue;
            i++;
            for (;i<nums.length;i++){
            	if(nums[i]>nums[j]){
            		min_idx=(min<=nums[i])?min_idx:i;
                    min=(min<=nums[i])?min:nums[i];
            	}
                
            }
            if (true){
                int temp=nums[j];
                nums[j]=min;
                nums[min_idx]=temp;
                
                for(int k=j+1;k<nums.length;k++){
                    min=nums[k];
                    min_idx=k;
                    for(int l=k+1;l<nums.length;l++){
                        min_idx=(min<=nums[l])?min_idx:l;
                        min=(min<=nums[l])?min:nums[l];
                    }
                    temp=nums[k];
                    nums[k]=nums[min_idx];
                    nums[min_idx]=temp;
                    
                }
                return;
            }
        }
        if (j<0){
            reverse(nums);
        }
        
    }
    public void reverse(int[] nums) {
        for(int i=0;i<=nums.length/2-1;i++){
            int temp=nums[i];
            nums[i]=nums[nums.length-1-i];
            nums[nums.length-1-i]=temp;
        }
    }
}
