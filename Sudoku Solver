public class Solution {
    public void solveSudoku(char[][] board) {
        solve(board);
    }

	private boolean solve(char[][] board) {
		// TODO Auto-generated method stub
		for(int i=0;i<board.length;i++){
			for(int j=0;j<board[0].length;j++){
				if(board[i][j]=='.'){
					char c;
					
					for( c='1';c<='9';c++){
						if(isValid(board, c, i, j)){
							board[i][j]=c;
							if(solve(board)) return true;
							else board[i][j]='.';
						}
					    
						
					}
					return false;
				}
			}
		}
		return true;
	}

	private boolean isValid(char[][] board, char c, int i, int j) {
		// TODO Auto-generated method stub
		for(int idx=0;idx<9;idx++){
			if(board[i][idx]==c) return false;
			if(board[idx][j]==c) return false;
			int row=i/3,column=j/3;
			int ro=idx/3,co=idx%3;
			if(board[row*3+ro][column*3+co]==c) return false;
		}
		return true;
	}
}
