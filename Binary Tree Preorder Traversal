/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
    	List<Integer> list=new ArrayList<>();
    	if(root==null){
    		return list;
    	}
    	Stack<TreeNode> stack=new Stack<>();
    	stack.add(root);
    	TreeNode p=root;
    	while(!stack.isEmpty()){
    		list.add(p.val);
    		if(p.left!=null){
    			p=p.left;
    			stack.push(p);
    		}else if(p.right!=null){
    			p=stack.pop().right;
    			stack.push(p);
    		}else{
    			stack.pop();
    			while(!stack.isEmpty()){
    				TreeNode t=stack.pop().right;
    				if(t!=null){
    					p=t;
    					stack.push(t);
                        break;
    				}
    			}
    		}
    	}
    	return list;
    }
}
