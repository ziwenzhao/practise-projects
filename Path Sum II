public class Solution {
	public List<List<Integer>> pathSum(TreeNode root, int sum) {
		
        List<List<Integer>> list=new ArrayList<>();
        if (root==null){
			return list;
		}
        List<Integer> curr=new ArrayList<>();
        curr.add(root.val);
        backtrack(curr,root,sum-root.val,list);
        return list;
    }

	private void backtrack(List<Integer> curr, TreeNode root, int sum, List<List<Integer>> list) {
		// TODO Auto-generated method stub
		if(root.left==null && root.right==null){
			if(sum==0){
				List<Integer> temp=new ArrayList<>(curr);
				list.add(temp);
			}else return;
		}
		if(root.right!=null){
			curr.add(root.right.val);
			backtrack(curr, root.right, sum-root.right.val, list);
			curr.remove(curr.size()-1);
		}
		if(root.left!=null){
			curr.add(root.left.val);
			backtrack(curr, root.left, sum-root.left.val, list);
			curr.remove(curr.size()-1);
		}
		
	}
}
