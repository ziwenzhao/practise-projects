public class Solution {
    public int rob(int[] nums) {
        if(nums.length==0) return 0;
        if(nums.length==1) return nums[0];
    	int []subNums=new int[nums.length-1];
    	for(int i=0;i<subNums.length;i++){
    		subNums[i]=nums[i+1];
    	}
    	int max1=rob1(subNums);
    	for(int i=0;i<subNums.length;i++){
    		subNums[i]=nums[i];
    	}
    	int max2=rob1(subNums);
    	return Math.max(max1, max2);
    }
    public int rob1(int[] nums) {
    	if(nums.length==0) return 0;
       int []dp=new int[nums.length];
       for(int i=0;i<nums.length;i++){
    	   if(i==0) dp[0]=nums[0];
    	   if(i==1) dp[1]=Math.max(nums[0], nums[1]);
    	   if(i==2) dp[2]=Math.max(nums[0]+nums[2], nums[1]);
    	   if(i>=3){
    		   int temp1=nums[i]+dp[i-2];
    		   int temp2=nums[i-1]+dp[i-3];
    		   dp[i]=Math.max(temp1, temp2);
    	   }
       }
       return dp[nums.length-1];
    }
}
